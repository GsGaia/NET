// <auto-generated />
using System;
using Gaia.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Gaia.Migrations
{
    [DbContext(typeof(DbOracle))]
    [Migration("20250603145004_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gaia.Domain.Entity.Accident", b =>
                {
                    b.Property<long>("IdAccident")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdAccident"));

                    b.Property<DateTime>("DateAccidentEnd")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("DateAccidentStart")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<long>("LocationId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<int>("TypeAccident")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("TypeSeverity")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("IdAccident");

                    b.HasIndex("LocationId");

                    b.ToTable("ACCIDENT", (string)null);
                });

            modelBuilder.Entity("Gaia.Domain.Entity.Location", b =>
                {
                    b.Property<long>("IdLocation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdLocation"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<DateTime>("EndAccident")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("StartAccident")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("Station")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("IdLocation");

                    b.ToTable("LOCATION", (string)null);
                });

            modelBuilder.Entity("Gaia.Domain.Entity.Requestion", b =>
                {
                    b.Property<long>("IdRequestion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRequestion"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR2(1000)");

                    b.Property<long>("IdLocation")
                        .HasColumnType("NUMBER(19)")
                        .HasAnnotation("Relational:JsonPropertyName", "idUser");

                    b.Property<long>("IdUser")
                        .HasColumnType("NUMBER(19)")
                        .HasAnnotation("Relational:JsonPropertyName", "idLocation");

                    b.Property<long?>("LocationIdLocation")
                        .HasColumnType("NUMBER(19)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<long?>("UserIdUser")
                        .HasColumnType("NUMBER(19)");

                    b.HasKey("IdRequestion");

                    b.HasIndex("IdLocation");

                    b.HasIndex("IdUser");

                    b.HasIndex("LocationIdLocation");

                    b.HasIndex("UserIdUser");

                    b.ToTable("REQUESTION", (string)null);
                });

            modelBuilder.Entity("Gaia.Domain.Entity.User", b =>
                {
                    b.Property<long>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdUser"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR2(11)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<int>("TypeUser")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("IdUser");

                    b.ToTable("USERS", (string)null);
                });

            modelBuilder.Entity("Gaia.Domain.Entity.Accident", b =>
                {
                    b.HasOne("Gaia.Domain.Entity.Location", "Location")
                        .WithMany("Accidents")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Gaia.Domain.Entity.Requestion", b =>
                {
                    b.HasOne("Gaia.Domain.Entity.Location", "Location")
                        .WithMany()
                        .HasForeignKey("IdLocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaia.Domain.Entity.User", null)
                        .WithMany("Requestions")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gaia.Domain.Entity.Location", null)
                        .WithMany("Requestions")
                        .HasForeignKey("LocationIdLocation");

                    b.HasOne("Gaia.Domain.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserIdUser");

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gaia.Domain.Entity.Location", b =>
                {
                    b.Navigation("Accidents");

                    b.Navigation("Requestions");
                });

            modelBuilder.Entity("Gaia.Domain.Entity.User", b =>
                {
                    b.Navigation("Requestions");
                });
#pragma warning restore 612, 618
        }
    }
}
